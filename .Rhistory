file='0_DATA/gsmr_aftermtcojoBMI_result_vitaminDXiaEtAl.gsmr'
# Read gsmr result after mtcojo
gsmr=read.table(file, header = T)
# Show the information of GSMR withour mtCOJO
before <- read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
before <- before %>%
dplyr::select(Outcome, bxy, p)
colnames(before) <- c("Outcome", "bxy_before", "p_before")
# Merge
gsmr <- merge(gsmr, before, by.x="Outcome", by.y="Outcome", all.x=T)
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
# A function that format a gsmr result
library(gdata)
# Read the meaning of files:
meaning=read.xls("list_of_traits_GSMR.xlsx", header=T)
# Read the meaning of files:
meaning=read.xls("0_DATA/list_of_traits_GSMR.xlsx", header=T)
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main!="X") ] )
# A few library
library(tidyverse)
library(DT)
# A function that format a gsmr result
library(gdata)
plot_primary <- function(file){
# Read gsmr result after mtcojo
gsmr=read.table(file, header = T)
# Show the information of GSMR withour mtCOJO
before <- read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
before <- before %>%
dplyr::select(Outcome, bxy, p)
colnames(before) <- c("Outcome", "bxy_before", "p_before")
# Merge
gsmr <- merge(gsmr, before, by.x="Outcome", by.y="Outcome", all.x=T)
# Read the meaning of files:
meaning=read.xls("0_DATA/list_of_traits_GSMR.xlsx", header=T)
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main!="X") ] )
# Compute thresholds
thres_primary <- 0.05 / nrow(primary)
thres_secondary <- 0.05 / nrow(secondary)
primary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
mutate(significance_before=ifelse(p_before<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
geom_point(aes(y=bxy_before), size=2, shape=20) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
}
plot_secondary <- function(file){
# Read gsmr result after mtcojo
gsmr=read.table(file, header = T)
# Show the information of GSMR withour mtCOJO
before <- read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
before <- before %>%
dplyr::select(Outcome, bxy, p)
colnames(before) <- c("Outcome", "bxy_before", "p_before")
# Merge
gsmr <- merge(gsmr, before, by.x="Outcome", by.y="Outcome", all.x=T)
# Read the meaning of files:
meaning=read.xls("0_DATA/list_of_traits_GSMR.xlsx", header=T)
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main!="X") ] )
# Compute thresholds
thres_primary <- 0.05 / nrow(primary)
thres_secondary <- 0.05 / nrow(secondary)
secondary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_secondary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
mutate(significance_before=ifelse(p_before<thres_secondary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
geom_point(aes(y=bxy_before), size=2, shape=20) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
}
plot_primary("0_DATA/gsmr_aftermtcojoBMI_result_vitaminDXiaEtAl.gsmr")
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Group=="Primary") ] )
# A function that format a gsmr result
library(gdata)
plot_primary <- function(file){
# Read gsmr result after mtcojo
gsmr=read.table(file, header = T)
# Show the information of GSMR withour mtCOJO
before <- read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
before <- before %>%
dplyr::select(Outcome, bxy, p)
colnames(before) <- c("Outcome", "bxy_before", "p_before")
# Merge
gsmr <- merge(gsmr, before, by.x="Outcome", by.y="Outcome", all.x=T)
# Read the meaning of files:
meaning=read.xls("0_DATA/list_of_traits_GSMR.xlsx", header=T)
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Group=="Primary") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Group!="Secondary") ] )
# Compute thresholds
thres_primary <- 0.05 / nrow(primary)
thres_secondary <- 0.05 / nrow(secondary)
primary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
mutate(significance_before=ifelse(p_before<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
geom_point(aes(y=bxy_before), size=2, shape=20) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
}
plot_secondary <- function(file){
# Read gsmr result after mtcojo
gsmr=read.table(file, header = T)
# Show the information of GSMR withour mtCOJO
before <- read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
before <- before %>%
dplyr::select(Outcome, bxy, p)
colnames(before) <- c("Outcome", "bxy_before", "p_before")
# Merge
gsmr <- merge(gsmr, before, by.x="Outcome", by.y="Outcome", all.x=T)
# Read the meaning of files:
meaning=read.xls("0_DATA/list_of_traits_GSMR.xlsx", header=T)
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main!="X") ] )
# Compute thresholds
thres_primary <- 0.05 / nrow(primary)
thres_secondary <- 0.05 / nrow(secondary)
secondary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_secondary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
mutate(significance_before=ifelse(p_before<thres_secondary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
geom_point(aes(y=bxy_before), size=2, shape=20) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
}
plot_primary("0_DATA/gsmr_aftermtcojoBMI_result_vitaminDXiaEtAl.gsmr")
setwd("/Users/y.holtz/Dropbox/QBI/4_UK_BIOBANK_GWAS_PROJECT/VitaminD-GWAS")
rmarkdown::render_site()
library(gdata)
data <- read.xls("plate_date.xlsx")
data
date <- read.xls("plate_date.xlsx")
date
colnames(date)[4] <- "Assay.Date.LabBook"
date
mypath="/Users/y.holtz/Dropbox/QBI/5_VITAMIN_D_TWIN_PROJECT/RAW/"
library(tidyverse)
library(readxl)
library(ggjoy)
library(ggridge)
library(tidyverse)
library(readxl)
library(ggridge)
library(ggridges)
library(tidyverse)
library(readxl)
library(ggridges)
library(xtable)
library(knitr)
library(rmdformats)
library(plotly)
# Create a list of the raw files
file.list <- list.files(mypath)
a=length(file.list)
# Read all this files and put them in a list:
my_fun=function(x){ read_excel(paste(mypath,x,sep=""), sheet="Results", col_names=T) }
df.list <- sapply(file.list, my_fun, simplify = FALSE)
# The plate #6 has an unnamed column that makes hard to bind it with others. I take the few values of this column and add them in the comments column
df.list[6][[1]]$Comments = df.list[6][[1]]$X__2
df.list[6][[1]] = df.list[6][[1]] %>% select(-c(X__2))
# Concatenate them in the same R object and call it: 'data'
data <- bind_rows(df.list, .id="id" )
data$id=data$id %>% gsub(".*QIMR", "QIMR", .) %>% gsub(" batch.*","",.) %>% gsub(" TR.*","",.) %>% gsub(" Yolken.*","",.) %>% gsub(" ","",.) %>% as.factor()
# Number of obs per plate? -> almost always the same number of obs/plate.
ggplot(data, aes(x=id)) + geom_bar(fill='skyblue') + coord_flip() + xlab("number of sample per plate")
colnames(data)[1:10]=c("plate","n384","sample_name","id","blank_25OHd2","serum_25OHd2","blank_25OHd3","serum_25OHd3","serum_total","comments")
data=data %>% mutate(myd3checked =
ifelse(!is.na(`D3 checked`), `D3 checked`,
ifelse(!is.na(`D3 check`), `D3 check`,
ifelse(!is.na(`D3check`), `D3check`,
ifelse(!is.na(`D3`), `D3`,
ifelse(!is.na(`D3 Checked`), `D3 Checked`,
NA
)))))
)
# Have a look to what is present in this column = what people wrote:
#table(data$myd3checked)
# Now that I have a good column, I need to replace the tiping error present in this column
data$myd3checked = data$myd3checked %>% gsub("D3 chceked", "D3 checked", .) %>% gsub("D3 Checked", "D3 checked", .)
data=data %>% mutate(myd2checked =
ifelse(!is.na(`D2 checked`), `D2 checked`,
ifelse(!is.na(`D2 check`), `D2 check`,
ifelse(!is.na(`D2`), `D2`,
NA
)))
)
# Have a look to what is present in this column = what people wrote:
#table(data$myd2checked)
# Now that I have a good column, I need to replace the tiping error present in this column
data$myd2checked = data$myd2checked %>% gsub("^checked$", "D2 checked", .) %>% gsub("D2 peak checked", "D2 checked", .)
# I can remove all the "checked" dirty columns.
data=data %>% select( c(1:10, 21, 22))
kable(xtable(head(data,5)))
a=nrow(data)
to_remove=c(                       # list of IDs
"8589001_TM_Yolken",             # Emailed by pauline : Failed reaction – no internal standard present in the assay.
"8634701_TW1", "8677802_TW1"     # Emailed by pauline : Failed reaction (1) / no sample (2)
)
data=data %>% filter(!sample_name %in% to_remove)
b=nrow(data)
# on which plate are they?
MISS=subset(data, is.na(sample_name))
table(MISS$plate)[table(MISS$plate) != 0]
# Found it
a=nrow(data)
b=nrow(subset(data, is.na(sample_name)))
data=subset(data, !is.na(sample_name))
c=nrow(data)
a=nrow(data)
blank=grep("lank", data$sample_name)
qimr=grep("QIMR", data$sample_name)
b=length(unique(c(blank, qimr)))
data=data[-c(blank, qimr) , ]
c=nrow(data)
# No vitamin D
no_vit = subset(data, serum_total==0)
a=nrow(no_vit)
# Have a comment
comment=subset(data, !is.na(comments))
b=nrow(comment)
# D3 checked or D2 checked is weird
zz=subset(data, !is.na(myd3checked) & myd3checked!="D3 checked" )
yy=subset(data, !is.na(myd2checked) & myd2checked!="D2 checked" )
weird=unique(rbind(zz,yy))
c=nrow(weird)
# Pauline told me to check
pauline=subset(data, sample_name=="8626704_TW1" )
# Over 100 with no warning
over=subset(data, serum_total>100 & is.na(myd2checked) & is.na(myd3checked))
# all the suspicious samples
suspicious=rbind(no_vit, comment, weird, pauline, over)
# output csv
write.csv(suspicious, file="/Users/y.holtz/Dropbox/QBI/5_VITAMIN_D_TWIN_PROJECT/Suspicious_VitaminD_samples.csv", quote=F, row.names = F)
a=nrow(data)
to_remove=c("8677802_TW1 sample missing","8646303_TW2","8629703_TW2","8629803_TW2")
data=data %>% filter(!sample_name %in% to_remove)
b=nrow(data)
data
date
date <- date %>% mutate(plate=gsub(".*QUIMR", "QIMR",.))
date <- date %>% mutate(plate=gsub(".*QUIMR", "QIMR", plate ))
date
date <- date %>% mutate(plate=gsub("QUIMR", "R", plate ))
date
date <- date %>% mutate(plate=gsub("QUIMR", "R", as.character(plate) ))
date
date <- date %>% mutate(plate=gsub(".*QIMR", "QIMR", plate ))
date
date <- date %>% mutate(plate=gsub(".*QIMR", "QIMR", plate )) %>% mutate(plate=gsub(" ", "", plate))
date
data
nrow(data)
data
data %>%
left_join(., date, by="plate")
data <- data %>%
left_join(., date, by="plate")
nrow(data)
nrow(data)
data <- data %>%
left_join(., date, by="plate")
nrow(data)
mypath="/Users/y.holtz/Dropbox/QBI/5_VITAMIN_D_TWIN_PROJECT/RAW/"
library(tidyverse)
library(readxl)
library(ggridges)
library(xtable)
library(knitr)
library(rmdformats)
library(plotly)
# Create a list of the raw files
file.list <- list.files(mypath)
a=length(file.list)
# Read all this files and put them in a list:
my_fun=function(x){ read_excel(paste(mypath,x,sep=""), sheet="Results", col_names=T) }
df.list <- sapply(file.list, my_fun, simplify = FALSE)
# The plate #6 has an unnamed column that makes hard to bind it with others. I take the few values of this column and add them in the comments column
df.list[6][[1]]$Comments = df.list[6][[1]]$X__2
df.list[6][[1]] = df.list[6][[1]] %>% select(-c(X__2))
# Concatenate them in the same R object and call it: 'data'
data <- bind_rows(df.list, .id="id" )
data$id=data$id %>% gsub(".*QIMR", "QIMR", .) %>% gsub(" batch.*","",.) %>% gsub(" TR.*","",.) %>% gsub(" Yolken.*","",.) %>% gsub(" ","",.) %>% as.factor()
# Number of obs per plate? -> almost always the same number of obs/plate.
ggplot(data, aes(x=id)) + geom_bar(fill='skyblue') + coord_flip() + xlab("number of sample per plate")
colnames(data)[1:10]=c("plate","n384","sample_name","id","blank_25OHd2","serum_25OHd2","blank_25OHd3","serum_25OHd3","serum_total","comments")
data=data %>% mutate(myd3checked =
ifelse(!is.na(`D3 checked`), `D3 checked`,
ifelse(!is.na(`D3 check`), `D3 check`,
ifelse(!is.na(`D3check`), `D3check`,
ifelse(!is.na(`D3`), `D3`,
ifelse(!is.na(`D3 Checked`), `D3 Checked`,
NA
)))))
)
# Have a look to what is present in this column = what people wrote:
#table(data$myd3checked)
# Now that I have a good column, I need to replace the tiping error present in this column
data$myd3checked = data$myd3checked %>% gsub("D3 chceked", "D3 checked", .) %>% gsub("D3 Checked", "D3 checked", .)
data=data %>% mutate(myd2checked =
ifelse(!is.na(`D2 checked`), `D2 checked`,
ifelse(!is.na(`D2 check`), `D2 check`,
ifelse(!is.na(`D2`), `D2`,
NA
)))
)
# Have a look to what is present in this column = what people wrote:
#table(data$myd2checked)
# Now that I have a good column, I need to replace the tiping error present in this column
data$myd2checked = data$myd2checked %>% gsub("^checked$", "D2 checked", .) %>% gsub("D2 peak checked", "D2 checked", .)
# I can remove all the "checked" dirty columns.
data=data %>% select( c(1:10, 21, 22))
kable(xtable(head(data,5)))
a=nrow(data)
to_remove=c(                       # list of IDs
"8589001_TM_Yolken",             # Emailed by pauline : Failed reaction – no internal standard present in the assay.
"8634701_TW1", "8677802_TW1"     # Emailed by pauline : Failed reaction (1) / no sample (2)
)
data=data %>% filter(!sample_name %in% to_remove)
b=nrow(data)
# on which plate are they?
MISS=subset(data, is.na(sample_name))
table(MISS$plate)[table(MISS$plate) != 0]
# Found it
a=nrow(data)
b=nrow(subset(data, is.na(sample_name)))
data=subset(data, !is.na(sample_name))
c=nrow(data)
a=nrow(data)
blank=grep("lank", data$sample_name)
qimr=grep("QIMR", data$sample_name)
b=length(unique(c(blank, qimr)))
data=data[-c(blank, qimr) , ]
c=nrow(data)
# No vitamin D
no_vit = subset(data, serum_total==0)
a=nrow(no_vit)
# Have a comment
comment=subset(data, !is.na(comments))
b=nrow(comment)
# D3 checked or D2 checked is weird
zz=subset(data, !is.na(myd3checked) & myd3checked!="D3 checked" )
yy=subset(data, !is.na(myd2checked) & myd2checked!="D2 checked" )
weird=unique(rbind(zz,yy))
c=nrow(weird)
# Pauline told me to check
pauline=subset(data, sample_name=="8626704_TW1" )
# Over 100 with no warning
over=subset(data, serum_total>100 & is.na(myd2checked) & is.na(myd3checked))
# all the suspicious samples
suspicious=rbind(no_vit, comment, weird, pauline, over)
# output csv
write.csv(suspicious, file="/Users/y.holtz/Dropbox/QBI/5_VITAMIN_D_TWIN_PROJECT/Suspicious_VitaminD_samples.csv", quote=F, row.names = F)
a=nrow(data)
to_remove=c("8677802_TW1 sample missing","8646303_TW2","8629703_TW2","8629803_TW2")
data=data %>% filter(!sample_name %in% to_remove)
b=nrow(data)
library(gdata)
date <- read.xls("plate_date.xlsx")
colnames(date)[4] <- "Assay.Date.LabBook"
date <- date %>% mutate(plate=gsub(".*QIMR", "QIMR", plate )) %>% mutate(plate=gsub(" ", "", plate))
nrow(data)
data <- data %>%
left_join(., date, by="plate")
nrow(data)
data
mypath="/Users/y.holtz/Dropbox/QBI/5_VITAMIN_D_TWIN_PROJECT/RAW/"
library(tidyverse)
library(readxl)
library(ggridges)
library(xtable)
library(knitr)
library(rmdformats)
library(plotly)
# Create a list of the raw files
file.list <- list.files(mypath)
a=length(file.list)
# Read all this files and put them in a list:
my_fun=function(x){ read_excel(paste(mypath,x,sep=""), sheet="Results", col_names=T) }
df.list <- sapply(file.list, my_fun, simplify = FALSE)
# The plate #6 has an unnamed column that makes hard to bind it with others. I take the few values of this column and add them in the comments column
df.list[6][[1]]$Comments = df.list[6][[1]]$X__2
df.list[6][[1]] = df.list[6][[1]] %>% select(-c(X__2))
# Concatenate them in the same R object and call it: 'data'
data <- bind_rows(df.list, .id="id" )
data$id=data$id %>% gsub(".*QIMR", "QIMR", .) %>% gsub(" batch.*","",.) %>% gsub(" TR.*","",.) %>% gsub(" Yolken.*","",.) %>% gsub(" ","",.) %>% as.factor()
# Number of obs per plate? -> almost always the same number of obs/plate.
ggplot(data, aes(x=id)) + geom_bar(fill='skyblue') + coord_flip() + xlab("number of sample per plate")
colnames(data)[1:10]=c("plate","n384","sample_name","id","blank_25OHd2","serum_25OHd2","blank_25OHd3","serum_25OHd3","serum_total","comments")
data=data %>% mutate(myd3checked =
ifelse(!is.na(`D3 checked`), `D3 checked`,
ifelse(!is.na(`D3 check`), `D3 check`,
ifelse(!is.na(`D3check`), `D3check`,
ifelse(!is.na(`D3`), `D3`,
ifelse(!is.na(`D3 Checked`), `D3 Checked`,
NA
)))))
)
# Have a look to what is present in this column = what people wrote:
#table(data$myd3checked)
# Now that I have a good column, I need to replace the tiping error present in this column
data$myd3checked = data$myd3checked %>% gsub("D3 chceked", "D3 checked", .) %>% gsub("D3 Checked", "D3 checked", .)
data=data %>% mutate(myd2checked =
ifelse(!is.na(`D2 checked`), `D2 checked`,
ifelse(!is.na(`D2 check`), `D2 check`,
ifelse(!is.na(`D2`), `D2`,
NA
)))
)
# Have a look to what is present in this column = what people wrote:
#table(data$myd2checked)
# Now that I have a good column, I need to replace the tiping error present in this column
data$myd2checked = data$myd2checked %>% gsub("^checked$", "D2 checked", .) %>% gsub("D2 peak checked", "D2 checked", .)
# I can remove all the "checked" dirty columns.
data=data %>% select( c(1:10, 21, 22))
kable(xtable(head(data,5)))
a=nrow(data)
to_remove=c(                       # list of IDs
"8589001_TM_Yolken",             # Emailed by pauline : Failed reaction – no internal standard present in the assay.
"8634701_TW1", "8677802_TW1"     # Emailed by pauline : Failed reaction (1) / no sample (2)
)
data=data %>% filter(!sample_name %in% to_remove)
b=nrow(data)
# on which plate are they?
MISS=subset(data, is.na(sample_name))
table(MISS$plate)[table(MISS$plate) != 0]
# Found it
a=nrow(data)
b=nrow(subset(data, is.na(sample_name)))
data=subset(data, !is.na(sample_name))
c=nrow(data)
a=nrow(data)
blank=grep("lank", data$sample_name)
qimr=grep("QIMR", data$sample_name)
b=length(unique(c(blank, qimr)))
data=data[-c(blank, qimr) , ]
c=nrow(data)
# No vitamin D
no_vit = subset(data, serum_total==0)
a=nrow(no_vit)
# Have a comment
comment=subset(data, !is.na(comments))
b=nrow(comment)
# D3 checked or D2 checked is weird
zz=subset(data, !is.na(myd3checked) & myd3checked!="D3 checked" )
yy=subset(data, !is.na(myd2checked) & myd2checked!="D2 checked" )
weird=unique(rbind(zz,yy))
c=nrow(weird)
# Pauline told me to check
pauline=subset(data, sample_name=="8626704_TW1" )
# Over 100 with no warning
over=subset(data, serum_total>100 & is.na(myd2checked) & is.na(myd3checked))
# all the suspicious samples
suspicious=rbind(no_vit, comment, weird, pauline, over)
# output csv
write.csv(suspicious, file="/Users/y.holtz/Dropbox/QBI/5_VITAMIN_D_TWIN_PROJECT/Suspicious_VitaminD_samples.csv", quote=F, row.names = F)
a=nrow(data)
to_remove=c("8677802_TW1 sample missing","8646303_TW2","8629703_TW2","8629803_TW2")
data=data %>% filter(!sample_name %in% to_remove)
b=nrow(data)
library(gdata)
# load date and reformat
date <- read.xls("plate_date.xlsx")
colnames(date)[4] <- "Assay.Date.LabBook"
date <- date %>% mutate(plate=gsub(".*QIMR", "QIMR", plate )) %>% mutate(plate=gsub(" ", "", plate))
#merge$
data <- data %>%
left_join(., date, by="plate")
write.csv(data, file="/Users/y.holtz/Dropbox/QBI/5_VITAMIN_D_TWIN_PROJECT/CLEAN/Clean_VitaminD_samples.csv", quote=F, row.names = F)
