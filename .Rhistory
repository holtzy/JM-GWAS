theme( panel.grid.major.y = element_blank()) +
ylab("-log10( pvalue )") +
xlab("")
primary %>%
arrange(desc(p)) %>%
filter( !is.na(bxy)) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=-log10(p))) +
geom_segment( aes(x=name, xend=name, y=-log10(p), yend=0), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_light() +
theme( panel.grid.major.y = element_blank()) +
ylab("-log10( pvalue )") +
xlab("")
primary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
secondary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_secondary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
secondary %>%
arrange(desc(p)) %>%
filter( !is.na(bxy)) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_secondary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=-log10(p))) +
geom_segment( aes(x=name, xend=name, y=-log10(p), yend=0), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_light() +
theme( panel.grid.major.y = element_blank()) +
ylab("-log10( pvalue )") +
xlab("")
setwd("/Users/y.holtz/Dropbox/QBI/4_UK_BIOBANK_GWAS_PROJECT/VitaminD-GWAS")
rmarkdown::render_site()
setwd("/Users/y.holtz/Dropbox/QBI/4_UK_BIOBANK_GWAS_PROJECT/VitaminD-GWAS")
rmarkdown::render_site()
setwd("/Users/y.holtz/Dropbox/QBI/4_UK_BIOBANK_GWAS_PROJECT/VitaminD-GWAS")
rmarkdown::render_site()
# Read gsmr result
gsmr=read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
gsmr
gsmr$Outcome
gsmr %>% filter(p==0.489589)
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
# Read gsmr result
gsmr=read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
meaning
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
primary
meaning$Trait
meaning$Trait[ which(meaning$Main=="X") ]
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
meaning
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
meaning
nrow(meaning)
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.txt", header=T, sep=",")
nrow(meaning)
meaning
meaning=read.table("0_DATA/toto.txt", header=T, sep=",")
nrow(meaning)
meaning
meaning=read.table("0_DATA/toto.txt", header=T, sep=",")
nrow(meaning)
meaning
meaning=read.table("0_DATA/toto.txt", header=T, sep=",")
nrow(meaning)
meaning
meaning=read.table("0_DATA/toto.txt", header=T, sep="\t")
nrow(meaning)
meaning
meaning=read.table("0_DATA/toto.csv", header=T, sep=",")
nrow(meaning)
meaning
meaning=read.table("0_DATA/toto.csv", header=T, sep=",")
nrow(meaning)
meaning=read.table("0_DATA/toto.txt", header=T, sep=",")
nrow(meaning)
meaning=read.table("0_DATA/toto.csv", header=T, sep=",")
nrow(meaning)
meaning=read.table("0_DATA/toto.csv", header=T, sep=",")
nrow(meaning)
meaning=read.table("0_DATA/toto.csv", header=T, sep=",")
nrow(meaning)
meaning=read.table("0_DATA/toto.csv", header=T, sep=",")
meaning=read.table("0_DATA/toto.csv", header=T, sep=",")
nrow(meaning)
meaning=read.table("0_DATA/toto.txt", header=T, sep=",")
nrow(meaning)
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main!="X") ] )
meaning
meaning=read.table("0_DATA/list_of_traits_GSMR.txt", header=T, sep=",")
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
nrow(meaning)
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main!="X") ] )
# Compute thresholds
thres_primary <- 0.05 / nrow(primary)
thres_secondary <- 0.05 / nrow(secondary)
primary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
# A few library
library(tidyverse)
library(DT)
# A few library
library(tidyverse)
library(DT)
# A few library
library(tidyverse)
library(DT)
# Read gsmr result
gsmr=read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.txt", header=T, sep=",")
# Read gsmr result
gsmr=read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
nrow(meaning)
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main!="X") ] )
# Compute thresholds
thres_primary <- 0.05 / nrow(primary)
thres_secondary <- 0.05 / nrow(secondary)
setwd("/Users/y.holtz/Dropbox/QBI/4_UK_BIOBANK_GWAS_PROJECT/VitaminD-GWAS")
rmarkdown::render_site()
# Read gsmr result
gsmr=read.table("0_DATA/gsmr_aftermtcojo_result_vitaminDXiaEtAl.gsmr", header = T)
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
nrow(meaning)
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main!="X") ] )
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main!="X") ] )
# Compute thresholds
thres_primary <- 0.05 / nrow(primary)
thres_secondary <- 0.05 / nrow(secondary)
primary %>% filter(p<thres_primary) %>% nrow()
primary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
# Read gsmr result after mtcojo
gsmr=read.table("0_DATA/gsmr_aftermtcojo_result_vitaminDXiaEtAl.gsmr", header = T)
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main!="X") ] )
# Compute thresholds
thres_primary <- 0.05 / nrow(primary)
thres_secondary <- 0.05 / nrow(secondary)
# Show the information of GSMR withour mtCOJO
before=read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
before
before <- before %>%
select(Outcome, bxy, p)
# Merge
gsmr <- merge(gsmr, before, by.x="Outcome", by.y="Outcome", all.x=T)
gsmr
# Read gsmr result after mtcojo
gsmr=read.table("0_DATA/gsmr_aftermtcojo_result_vitaminDXiaEtAl.gsmr", header = T)
# Show the information of GSMR withour mtCOJO
before <- read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
before <- before %>%
select(Outcome, bxy, p)
colnames(before) <- c("Outcome", "bxy_before", "p_before")
# Merge
gsmr <- merge(gsmr, before, by.x="Outcome", by.y="Outcome", all.x=T)
gsmr
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main!="X") ] )
primary
# Read gsmr result after mtcojo
gsmr=read.table("0_DATA/gsmr_aftermtcojo_result_vitaminDXiaEtAl.gsmr", header = T)
# Show the information of GSMR withour mtCOJO
before <- read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
before <- before %>%
select(Outcome, bxy, p)
colnames(before) <- c("Outcome", "bxy_before", "p_before")
# Merge
gsmr <- merge(gsmr, before, by.x="Outcome", by.y="Outcome", all.x=T)
# Read the meaning of files:
meaning=read.table("0_DATA/list_of_traits_GSMR.csv", header=T, sep=",")
primary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main=="X") ] )
secondary <- gsmr %>% filter( Outcome %in% meaning$Trait[ which(meaning$Main!="X") ] )
# Compute thresholds
thres_primary <- 0.05 / nrow(primary)
thres_secondary <- 0.05 / nrow(secondary)
primary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
primary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) )
primary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
geom_point(aes(y=bxy_before), size=2) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
primary
primary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
mutate(significance_before=ifelse(p_before<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
geom_point(aes(y=bxy_before, color=significance), size=2) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
primary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
mutate(significance_before=ifelse(p_before<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
geom_point(aes(y=bxy_before), size=2) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
primary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
mutate(significance_before=ifelse(p_before<thres_primary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
geom_point(aes(y=bxy_before), size=2, shape=20) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
secondary %>%
arrange(bxy) %>%
filter(!is.na(bxy) ) %>%
mutate(name=factor(Outcome, unique(Outcome))) %>%
mutate(significance=ifelse(p<thres_secondary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
mutate(significance_before=ifelse(p_before<thres_secondary, "signif multi.testing", ifelse(p<0.05, "signif", "nonSignif") ) ) %>%
ggplot( aes(x=name, y=bxy)) +
geom_hline( yintercept=0 ) +
geom_segment( aes(x=name, xend=name, y=bxy-se, yend=bxy+se), color="skyblue", alpha=0.7) +
geom_point(aes(color=significance), size=4) +
geom_point(aes(y=bxy_before), size=2, shape=20) +
scale_color_manual( values=c("grey", "orange", "red")) +
coord_flip() +
theme_bw() +
theme( panel.grid.major.y = element_line(size=0.1)) +
ylab("Bxy (Effect size)") +
xlab("")
# Just to add space between the introduction of the document
knitr::asis_output(htmltools::htmlPreserve("<br><br>"))
knitr::opts_chunk$set(echo = TRUE, fig.align="center")
library(tidyverse)
library(qqman)
library(readr)
library(DT)
library(ggrepel)
# Read result
data=read_delim("0_DATA/GWAS_vitaminD_XiaEtAL.linear.gz", col_names=T, delim=" ")
data$CHR=as.factor(data$CHR)
#data=data[ sample(seq(1,nrow(data)), 10000) , ]
# Read after clumping data
clump=read.table("0_DATA/result_GWAS_VitaminD_XiaEtAl_clumped", header=T)
# A list of all SNPs implicated in an association?
Hit_SNP <- c(
as.character(clump$SNP),
strsplit(as.character(clump$SP2), ',', fixed=TRUE) %>% unlist() %>% gsub("\\(.\\)", "", .)
)
Hit_SNP <- Hit_SNP[Hit_SNP != "NONE"]
# -------- Add cumulative position + clumping information to data
don <- data %>%
# Compute chromosome size and merge this info to the GWAS result
group_by(CHR) %>%
summarise(chr_len=max(BP)) %>%
mutate(tot=cumsum(chr_len)-chr_len) %>%
select(-chr_len) %>%
left_join(data, ., by=c("CHR"="CHR")) %>%
# keep only SNP with pvalue < 0.05: it makes the plot realisation way faster
filter( P<0.1 ) %>%   # | SNP %in% sample(data$SNP, 150000)
# Add a cumulative position colummn to the data set
arrange(CHR, BP) %>%
mutate( BPcum=BP+tot) %>%
# Add clumping information
mutate( is_major=ifelse(SNP %in% clump$SNP & P<10e-8, "yes", "no")) %>%
mutate( is_clump=ifelse(SNP %in% Hit_SNP, "yes", "no"))
# -------- prepare X axis
axisdf = don %>% group_by(CHR) %>% summarize(center=( max(BPcum) + min(BPcum) ) / 2 )
# -------- Basic plot
ggplot(don, aes(x=BPcum, y=-log10(P))) +
# Show all points
geom_point( aes(color=as.factor(CHR)), alpha=0.3, size=0.5) +
scale_color_manual(values = rep(c("grey", "pink"),44)) +
# Add highlighted points for significant association:
geom_point(data=subset(don, is_clump=="yes"), color="orange", size=0.2) +
geom_point(data=subset(don, is_major=="yes"), color="red", size=4) +
geom_label_repel( data=subset(don, is_major=="yes"), aes(label=SNP), size=2.8) +
# Make X axis:
scale_x_continuous( label = as.character(axisdf$CHR), breaks= axisdf$center ) +
# Signicativity line
geom_hline(yintercept = 8, color="orange", size=0.7) +
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
)
library(plotly)
don$text <- paste("SNP: ", don$SNP, "\n", "-log10(P-val): ", round(-log10(don$P),2), "\n", "Position: ", don$BP, "\n", "Chromosome: ", don$CHR, "\n", "Beta: ", don$BETA)
p <- don %>%
filter(is_clump=="no") %>%
filter( P<0.001 ) %>%   # | SNP %in% sample(data$SNP, 150000)
ggplot( aes(x=BPcum, y=-log10(P), text=text)) +
# Show all points
geom_point( aes(color=as.factor(CHR)), alpha=0.3, size=0.5) +
scale_color_manual(values = rep(c("grey", "pink"),44)) +
# Make X axis:
scale_x_continuous( label = as.character(axisdf$CHR), breaks= axisdf$center ) +
# Signicativity line
geom_hline(yintercept = 8, color="orange", size=0.7) +
theme_bw() +
theme(
legend.position="none",
panel.border = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank()
) +
ylim(0,8)
ggplotly(p, tooltip = "text")
res <- read.table("result_GWAS_VitaminD_XiaEtAl_clumped", header=T)
res <- read.table("DATA/result_GWAS_VitaminD_XiaEtAl_clumped", header=T)
res <- read.table("0_DATA/result_GWAS_VitaminD_XiaEtAl_clumped", header=T)
res
res
data
clump
data
clump
install.packages("biomaRt")
library(biomaRt)
source("https://bioconductor.org/biocLite.R")
biocLite("biomaRt")
library('biomaRt')
library(biomaRt)
# Find out the genes IDs (ensemble IDs are provided with this dataset)
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
eqtlgen
getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id", "entrezgene", "description"), values=eqtlgen$Gene[1:4], mart= mart)
getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id", "entrezgene", "description"), values="ENSG00000080493", mart= mart)
getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id", "hgnc_symbol", "description"), values="ENSG00000080493", mart= mart)
tmp <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id", "hgnc_symbol", "description"), values=eqtlgen$Gene[1:4], mart= mart)
tmp
eqtlgen <- merge( eqtlgen, tmp, by.x="Gene", by.y=ensembl_gene_id, all.x=TRUE)
eqtlgen <- merge( eqtlgen, tmp, by.x="Gene", by.y="ensembl_gene_id", all.x=TRUE)
eqtlgen
# Load SMR result
eqtlgen <- read.table("0_DATA/smr_VitaminDXiaEtAl_eQTLGEN.smr", header=T)
# Find out the genes IDs (ensemble IDs are provided with this dataset)
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
tmp <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id", "hgnc_symbol", "description"), values=eqtlgen$Gene, mart= mart)
source("https://bioconductor.org/biocLite.R")
biocLite("biomaRt")
getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id", "hgnc_symbol", "description"), values="ENSG00000080493", mart= mart)
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id", "hgnc_symbol", "description"), values="ENSG00000080493", mart= mart)
tmp
# Load SMR result
eqtlgen <- read.table("0_DATA/smr_VitaminDXiaEtAl_eQTLGEN.smr", header=T)
eqtlgen <- merge( eqtlgen, tmp, by.x="Gene", by.y="ensembl_gene_id", all.x=TRUE)
eqtlgen
# prepare a file that gives the link to the GWAS result for the risk factor = Vitamin D. After correction for risk factors
cat /shares/compbio/Group-Wray/YanHoltz/VITAMIND_XIA_ET_AL/8_MTCOJO/mtcojo_SMOKE_result_vitaminD.mtcojo.cma | cut -f1-8 > file.ma
# Read gsmr result after mtcojo
gsmr=read.table("0_DATA/gsmr_aftermtcojoBMI_result_vitaminDXiaEtAl.gsmr", header = T)
# Show the information of GSMR withour mtCOJO
before <- read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
before <- before %>%
select(Outcome, bxy, p)
# A few library
library(tidyverse)
library(DT)
# A few library
library(tidyverse)
library(DT)
# Show the information of GSMR withour mtCOJO
before <- read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
before <- before %>%
select(Outcome, bxy, p)
before
before <- before %>%
select(Outcome, bxy, p)
# Read gsmr result after mtcojo
gsmr=read.table("0_DATA/gsmr_aftermtcojoBMI_result_vitaminDXiaEtAl.gsmr", header = T)
# Show the information of GSMR withour mtCOJO
before <- read.table("0_DATA/gsmr_result_vitaminDXiaEtAl.gsmr", header = T)
before <- before %>%
select(Outcome, bxy, p)
# A few library
library(tidyverse)
library(DT)
