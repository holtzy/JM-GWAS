mutate(total=crypto_plat1 + crypto_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
ylab("Crypto") +
expand_limits(y=0) +
xlab("")
e=bilan %>%
select(time, total, total_without_arbitrage) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
xlab("")
f=bilan %>%
ggplot(aes(x=time, y=total_euro, color="A")) +
geom_line() +
xlab("")
g=bilan %>%
ggplot(aes(x=time, y=gain, color=rebalance)) +
geom_point() +
geom_abline(slope=0, size=0.3 ) +
#ylim(-0.2, 0.2) +
#theme(legend.position=c(.1, .1))+
xlab("")
library(gridExtra)
library(ggplot2)
grid.arrange(a,b,c,d,e,f,g, ncol=1)
library(tidyverse)
load("~/Dropbox/CRYPTO/5_ARBITRAGE/BITSTAMP_CEX/arbitrage_bitstamp_cex_BCHEUR_30April.Rdata")
bilan[,-which(colnames(bilan)%in%c("transaction", "rebalance"))]= apply( bilan[,-which(colnames(bilan)%in%c("transaction", "rebalance"))], 2, as.numeric ) %>% as.tibble()
bilan$time=as.POSIXct( bilan$time, origin="1970-01-01")
# For each transaction, I calculate if it made me earn money or not.
bilan$gain=NA
bilan$gain[which(bilan$transaction=="yes")] = bilan$total_euro[ which(bilan$transaction=="yes") ] - bilan$total_euro[ which(bilan$transaction=="yes")-1 ]
bilan
len_period=max(bilan$time) - min(bilan$time)
len_period
a=bilan %>% filter(transaction=="yes") %>% nrow()
b=bilan %>% filter(transaction=="yes") %>% filter(rebalance=="yes") %>% nrow()
cat("I have done ", a , " transaction, ", b, " of them where for rebalancing")
start = bilan$total_euro[1]
end = bilan$total_euro[nrow(bilan)]
gain = end-start
gain_perc=gain/mean(bilan$total)*100
cat("I started with ", start, " euros and now have ", end, " (I made ", gain, " euros)")
cat(" This is a profit of about", round(gain_perc,4), " %")
start = bilan$total_crypto[1]
end = bilan$total_crypto[nrow(bilan)]
gain = end-start
cat("I started with ", start, " crypto and now have ", end, " (I made ", gain, " crypto)")
bilan %>% filter(transaction=="yes")
bilan %>% filter(id>12656 & id<12660)
bilan %>% ggplot( aes(x=time, y=crypto_plat1)) + geom_line()
bilan %>% tail
a=bilan %>%
select(time, last_plat1, last_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#ylim(5500, 6400) +
ggtitle("Evolution of last value") +
#theme(legend.position="none") +
xlab("")
b=bilan %>%
mutate(vline_transac=ifelse(transaction=="yes" & rebalance=="no", time, NA)) %>%
mutate(vline_rebalance=ifelse(transaction=="yes" & rebalance=="yes", time, NA)) %>%
mutate(vline_transac=as.POSIXct(vline_transac, origin="1970-01-01")) %>%
mutate(vline_rebalance=as.POSIXct(vline_rebalance, origin="1970-01-01")) %>%
rowwise() %>%
select(time, diff_side1, diff_side2, transaction, vline_transac, vline_rebalance) %>%
gather( key=side, value=value, -c(1,4,5,6,7)) %>%
ggplot(aes(x=time, y=value, color=side)) +
geom_abline(slope=0, intercept=0, color="grey") +
geom_abline(slope=0, intercept=unique(bilan$thres), color="grey", linetype="dashed") +
geom_vline( aes(xintercept=vline_transac), color="orange") +
geom_vline( aes(xintercept=vline_rebalance), color="pink") +
geom_line() +
#theme(legend.position = c(.15, .15) )
#theme(legend.position="none") +
ylim(-3,3)+
xlab("")
c=bilan %>%
select(time, euro_plat1, euro_plat2) %>%
mutate(total=euro_plat1 + euro_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
ylab("Euro") +
expand_limits(y=0) +
xlab("")
d=bilan %>%
select(time, crypto_plat1, crypto_plat2) %>%
mutate(total=crypto_plat1 + crypto_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
ylab("Crypto") +
expand_limits(y=0) +
xlab("")
e=bilan %>%
select(time, total, total_without_arbitrage) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
xlab("")
f=bilan %>%
ggplot(aes(x=time, y=total_euro, color="A")) +
geom_line() +
xlab("")
g=bilan %>%
ggplot(aes(x=time, y=gain, color=rebalance)) +
geom_point() +
geom_abline(slope=0, size=0.3 ) +
#ylim(-0.2, 0.2) +
#theme(legend.position=c(.1, .1))+
xlab("")
library(gridExtra)
library(ggplot2)
grid.arrange(a,b,c,d,e,f,g, ncol=1)
library(tidyverse)
load("~/Dropbox/CRYPTO/5_ARBITRAGE/BITSTAMP_CEX/arbitrage_bitstamp_cex_BCHEUR_30April.Rdata")
bilan[,-which(colnames(bilan)%in%c("transaction", "rebalance"))]= apply( bilan[,-which(colnames(bilan)%in%c("transaction", "rebalance"))], 2, as.numeric ) %>% as.tibble()
bilan$time=as.POSIXct( bilan$time, origin="1970-01-01")
# For each transaction, I calculate if it made me earn money or not.
bilan$gain=NA
bilan$gain[which(bilan$transaction=="yes")] = bilan$total_euro[ which(bilan$transaction=="yes") ] - bilan$total_euro[ which(bilan$transaction=="yes")-1 ]
bilan
len_period=max(bilan$time) - min(bilan$time)
len_period
a=bilan %>% filter(transaction=="yes") %>% nrow()
b=bilan %>% filter(transaction=="yes") %>% filter(rebalance=="yes") %>% nrow()
cat("I have done ", a , " transaction, ", b, " of them where for rebalancing")
start = bilan$total_euro[1]
end = bilan$total_euro[nrow(bilan)]
gain = end-start
gain_perc=gain/mean(bilan$total)*100
cat("I started with ", start, " euros and now have ", end, " (I made ", gain, " euros)")
cat(" This is a profit of about", round(gain_perc,4), " %")
start = bilan$total_crypto[1]
end = bilan$total_crypto[nrow(bilan)]
gain = end-start
cat("I started with ", start, " crypto and now have ", end, " (I made ", gain, " crypto)")
bilan %>% filter(transaction=="yes")
bilan %>% filter(id>12656 & id<12660)
bilan %>% ggplot( aes(x=time, y=crypto_plat1)) + geom_line()
bilan %>% tail
a=bilan %>%
select(time, last_plat1, last_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#ylim(5500, 6400) +
ggtitle("Evolution of last value") +
#theme(legend.position="none") +
xlab("")
b=bilan %>%
mutate(vline_transac=ifelse(transaction=="yes" & rebalance=="no", time, NA)) %>%
mutate(vline_rebalance=ifelse(transaction=="yes" & rebalance=="yes", time, NA)) %>%
mutate(vline_transac=as.POSIXct(vline_transac, origin="1970-01-01")) %>%
mutate(vline_rebalance=as.POSIXct(vline_rebalance, origin="1970-01-01")) %>%
rowwise() %>%
select(time, diff_side1, diff_side2, transaction, vline_transac, vline_rebalance) %>%
gather( key=side, value=value, -c(1,4,5,6,7)) %>%
ggplot(aes(x=time, y=value, color=side)) +
geom_abline(slope=0, intercept=0, color="grey") +
geom_abline(slope=0, intercept=unique(bilan$thres), color="grey", linetype="dashed") +
geom_vline( aes(xintercept=vline_transac), color="orange") +
geom_vline( aes(xintercept=vline_rebalance), color="pink") +
geom_line() +
#theme(legend.position = c(.15, .15) )
#theme(legend.position="none") +
ylim(-3,3)+
xlab("")
c=bilan %>%
select(time, euro_plat1, euro_plat2) %>%
mutate(total=euro_plat1 + euro_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
ylab("Euro") +
expand_limits(y=0) +
xlab("")
d=bilan %>%
select(time, crypto_plat1, crypto_plat2) %>%
mutate(total=crypto_plat1 + crypto_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
ylab("Crypto") +
expand_limits(y=0) +
xlab("")
e=bilan %>%
select(time, total, total_without_arbitrage) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
xlab("")
f=bilan %>%
ggplot(aes(x=time, y=total_euro, color="A")) +
geom_line() +
xlab("")
g=bilan %>%
ggplot(aes(x=time, y=gain, color=rebalance)) +
geom_point() +
geom_abline(slope=0, size=0.3 ) +
#ylim(-0.2, 0.2) +
#theme(legend.position=c(.1, .1))+
xlab("")
library(gridExtra)
library(ggplot2)
grid.arrange(a,b,c,d,e,f,g, ncol=1)
library(tidyverse)
load("~/Dropbox/CRYPTO/5_ARBITRAGE/BITSTAMP_CEX/arbitrage_bitstamp_cex_BCHEUR_30April.Rdata")
bilan[,-which(colnames(bilan)%in%c("transaction", "rebalance"))]= apply( bilan[,-which(colnames(bilan)%in%c("transaction", "rebalance"))], 2, as.numeric ) %>% as.tibble()
bilan$time=as.POSIXct( bilan$time, origin="1970-01-01")
# For each transaction, I calculate if it made me earn money or not.
bilan$gain=NA
bilan$gain[which(bilan$transaction=="yes")] = bilan$total_euro[ which(bilan$transaction=="yes") ] - bilan$total_euro[ which(bilan$transaction=="yes")-1 ]
bilan
len_period=max(bilan$time) - min(bilan$time)
len_period
a=bilan %>% filter(transaction=="yes") %>% nrow()
b=bilan %>% filter(transaction=="yes") %>% filter(rebalance=="yes") %>% nrow()
cat("I have done ", a , " transaction, ", b, " of them where for rebalancing")
start = bilan$total_euro[1]
end = bilan$total_euro[nrow(bilan)]
gain = end-start
gain_perc=gain/mean(bilan$total)*100
cat("I started with ", start, " euros and now have ", end, " (I made ", gain, " euros)")
cat(" This is a profit of about", round(gain_perc,4), " %")
start = bilan$total_crypto[1]
end = bilan$total_crypto[nrow(bilan)]
gain = end-start
cat("I started with ", start, " crypto and now have ", end, " (I made ", gain, " crypto)")
bilan %>% filter(transaction=="yes")
bilan %>% filter(id>12656 & id<12660)
bilan %>% ggplot( aes(x=time, y=crypto_plat1)) + geom_line()
bilan %>% tail
a=bilan %>%
select(time, last_plat1, last_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#ylim(5500, 6400) +
ggtitle("Evolution of last value") +
#theme(legend.position="none") +
xlab("")
b=bilan %>%
mutate(vline_transac=ifelse(transaction=="yes" & rebalance=="no", time, NA)) %>%
mutate(vline_rebalance=ifelse(transaction=="yes" & rebalance=="yes", time, NA)) %>%
mutate(vline_transac=as.POSIXct(vline_transac, origin="1970-01-01")) %>%
mutate(vline_rebalance=as.POSIXct(vline_rebalance, origin="1970-01-01")) %>%
rowwise() %>%
select(time, diff_side1, diff_side2, transaction, vline_transac, vline_rebalance) %>%
gather( key=side, value=value, -c(1,4,5,6,7)) %>%
ggplot(aes(x=time, y=value, color=side)) +
geom_abline(slope=0, intercept=0, color="grey") +
geom_abline(slope=0, intercept=unique(bilan$thres), color="grey", linetype="dashed") +
geom_vline( aes(xintercept=vline_transac), color="orange") +
geom_vline( aes(xintercept=vline_rebalance), color="pink") +
geom_line() +
#theme(legend.position = c(.15, .15) )
#theme(legend.position="none") +
ylim(-3,3)+
xlab("")
c=bilan %>%
select(time, euro_plat1, euro_plat2) %>%
mutate(total=euro_plat1 + euro_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
ylab("Euro") +
expand_limits(y=0) +
xlab("")
d=bilan %>%
select(time, crypto_plat1, crypto_plat2) %>%
mutate(total=crypto_plat1 + crypto_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
ylab("Crypto") +
expand_limits(y=0) +
xlab("")
e=bilan %>%
select(time, total, total_without_arbitrage) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
xlab("")
f=bilan %>%
ggplot(aes(x=time, y=total_euro, color="A")) +
geom_line() +
xlab("")
g=bilan %>%
ggplot(aes(x=time, y=gain, color=rebalance)) +
geom_point() +
geom_abline(slope=0, size=0.3 ) +
#ylim(-0.2, 0.2) +
#theme(legend.position=c(.1, .1))+
xlab("")
library(gridExtra)
library(ggplot2)
grid.arrange(a,b,c,d,e,f,g, ncol=1)
library(tidyverse)
load("~/Dropbox/CRYPTO/5_ARBITRAGE/BITSTAMP_CEX/arbitrage_bitstamp_cex_BCHEUR_30April.Rdata")
bilan[,-which(colnames(bilan)%in%c("transaction", "rebalance"))]= apply( bilan[,-which(colnames(bilan)%in%c("transaction", "rebalance"))], 2, as.numeric ) %>% as.tibble()
bilan$time=as.POSIXct( bilan$time, origin="1970-01-01")
# For each transaction, I calculate if it made me earn money or not.
bilan$gain=NA
bilan$gain[which(bilan$transaction=="yes")] = bilan$total_euro[ which(bilan$transaction=="yes") ] - bilan$total_euro[ which(bilan$transaction=="yes")-1 ]
bilan
len_period=max(bilan$time) - min(bilan$time)
len_period
a=bilan %>% filter(transaction=="yes") %>% nrow()
b=bilan %>% filter(transaction=="yes") %>% filter(rebalance=="yes") %>% nrow()
cat("I have done ", a , " transaction, ", b, " of them where for rebalancing")
start = bilan$total_euro[1]
end = bilan$total_euro[nrow(bilan)]
gain = end-start
gain_perc=gain/mean(bilan$total)*100
cat("I started with ", start, " euros and now have ", end, " (I made ", gain, " euros)")
cat(" This is a profit of about", round(gain_perc,4), " %")
start = bilan$total_crypto[1]
end = bilan$total_crypto[nrow(bilan)]
gain = end-start
cat("I started with ", start, " crypto and now have ", end, " (I made ", gain, " crypto)")
bilan %>% filter(transaction=="yes")
bilan %>% filter(id>12656 & id<12660)
bilan %>% ggplot( aes(x=time, y=crypto_plat1)) + geom_line()
bilan %>% tail
a=bilan %>%
select(time, last_plat1, last_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#ylim(5500, 6400) +
ggtitle("Evolution of last value") +
#theme(legend.position="none") +
xlab("")
b=bilan %>%
mutate(vline_transac=ifelse(transaction=="yes" & rebalance=="no", time, NA)) %>%
mutate(vline_rebalance=ifelse(transaction=="yes" & rebalance=="yes", time, NA)) %>%
mutate(vline_transac=as.POSIXct(vline_transac, origin="1970-01-01")) %>%
mutate(vline_rebalance=as.POSIXct(vline_rebalance, origin="1970-01-01")) %>%
rowwise() %>%
select(time, diff_side1, diff_side2, transaction, vline_transac, vline_rebalance) %>%
gather( key=side, value=value, -c(1,4,5,6,7)) %>%
ggplot(aes(x=time, y=value, color=side)) +
geom_abline(slope=0, intercept=0, color="grey") +
geom_abline(slope=0, intercept=unique(bilan$thres), color="grey", linetype="dashed") +
geom_vline( aes(xintercept=vline_transac), color="orange") +
geom_vline( aes(xintercept=vline_rebalance), color="pink") +
geom_line() +
#theme(legend.position = c(.15, .15) )
#theme(legend.position="none") +
ylim(-3,3)+
xlab("")
c=bilan %>%
select(time, euro_plat1, euro_plat2) %>%
mutate(total=euro_plat1 + euro_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
ylab("Euro") +
expand_limits(y=0) +
xlab("")
d=bilan %>%
select(time, crypto_plat1, crypto_plat2) %>%
mutate(total=crypto_plat1 + crypto_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
ylab("Crypto") +
expand_limits(y=0) +
xlab("")
e=bilan %>%
select(time, total, total_without_arbitrage) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
xlab("")
f=bilan %>%
ggplot(aes(x=time, y=total_euro, color="A")) +
geom_line() +
xlab("")
g=bilan %>%
ggplot(aes(x=time, y=gain, color=rebalance)) +
geom_point() +
geom_abline(slope=0, size=0.3 ) +
#ylim(-0.2, 0.2) +
#theme(legend.position=c(.1, .1))+
xlab("")
library(gridExtra)
library(ggplot2)
grid.arrange(a,b,c,d,e,f,g, ncol=1)
library(tidyverse)
load("~/Dropbox/CRYPTO/5_ARBITRAGE/BITSTAMP_CEX/arbitrage_bitstamp_cex_BCHEUR_30April.Rdata")
bilan[,-which(colnames(bilan)%in%c("transaction", "rebalance"))]= apply( bilan[,-which(colnames(bilan)%in%c("transaction", "rebalance"))], 2, as.numeric ) %>% as.tibble()
bilan$time=as.POSIXct( bilan$time, origin="1970-01-01")
# For each transaction, I calculate if it made me earn money or not.
bilan$gain=NA
bilan$gain[which(bilan$transaction=="yes")] = bilan$total_euro[ which(bilan$transaction=="yes") ] - bilan$total_euro[ which(bilan$transaction=="yes")-1 ]
bilan
len_period=max(bilan$time) - min(bilan$time)
len_period
a=bilan %>% filter(transaction=="yes") %>% nrow()
b=bilan %>% filter(transaction=="yes") %>% filter(rebalance=="yes") %>% nrow()
cat("I have done ", a , " transaction, ", b, " of them where for rebalancing")
start = bilan$total_euro[1]
end = bilan$total_euro[nrow(bilan)]
gain = end-start
gain_perc=gain/mean(bilan$total)*100
cat("I started with ", start, " euros and now have ", end, " (I made ", gain, " euros)")
cat(" This is a profit of about", round(gain_perc,4), " %")
start = bilan$total_crypto[1]
end = bilan$total_crypto[nrow(bilan)]
gain = end-start
cat("I started with ", start, " crypto and now have ", end, " (I made ", gain, " crypto)")
bilan %>% filter(transaction=="yes")
bilan %>% filter(id>12656 & id<12660)
bilan %>% ggplot( aes(x=time, y=crypto_plat1)) + geom_line()
bilan %>% tail
a=bilan %>%
select(time, last_plat1, last_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#ylim(5500, 6400) +
ggtitle("Evolution of last value") +
#theme(legend.position="none") +
xlab("")
b=bilan %>%
mutate(vline_transac=ifelse(transaction=="yes" & rebalance=="no", time, NA)) %>%
mutate(vline_rebalance=ifelse(transaction=="yes" & rebalance=="yes", time, NA)) %>%
mutate(vline_transac=as.POSIXct(vline_transac, origin="1970-01-01")) %>%
mutate(vline_rebalance=as.POSIXct(vline_rebalance, origin="1970-01-01")) %>%
rowwise() %>%
select(time, diff_side1, diff_side2, transaction, vline_transac, vline_rebalance) %>%
gather( key=side, value=value, -c(1,4,5,6,7)) %>%
ggplot(aes(x=time, y=value, color=side)) +
geom_abline(slope=0, intercept=0, color="grey") +
geom_abline(slope=0, intercept=unique(bilan$thres), color="grey", linetype="dashed") +
geom_vline( aes(xintercept=vline_transac), color="orange") +
geom_vline( aes(xintercept=vline_rebalance), color="pink") +
geom_line() +
#theme(legend.position = c(.15, .15) )
#theme(legend.position="none") +
ylim(-3,3)+
xlab("")
c=bilan %>%
select(time, euro_plat1, euro_plat2) %>%
mutate(total=euro_plat1 + euro_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
ylab("Euro") +
expand_limits(y=0) +
xlab("")
d=bilan %>%
select(time, crypto_plat1, crypto_plat2) %>%
mutate(total=crypto_plat1 + crypto_plat2) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
ylab("Crypto") +
expand_limits(y=0) +
xlab("")
e=bilan %>%
select(time, total, total_without_arbitrage) %>%
gather(plateform, value, -1) %>%
ggplot( aes(x=time, y=value, color=plateform)) +
geom_line() +
#theme(legend.position="none") +
xlab("")
f=bilan %>%
ggplot(aes(x=time, y=total_euro, color="A")) +
geom_line() +
xlab("")
g=bilan %>%
ggplot(aes(x=time, y=gain, color=rebalance)) +
geom_point() +
geom_abline(slope=0, size=0.3 ) +
#ylim(-0.2, 0.2) +
#theme(legend.position=c(.1, .1))+
xlab("")
library(gridExtra)
library(ggplot2)
grid.arrange(a,b,c,d,e,f,g, ncol=1)
# A few library
library(tidyverse)
library(DT)
library(hrbrthemes)
library(ggrepel)
# Read the data file in R:
source("SCRIPT/plot_SMR.r")
SMRData = ReadSMRData("0_DATA/SMR_PLOT_DATA/integration_result_Chr11_15Mb.ENSG00000152270.txt")
